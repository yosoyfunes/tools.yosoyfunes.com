{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"@yosoyfunes","title":"Home"},{"location":"certificate.html","text":"how to download the ssl certificate from a website In order to download the certificate, you need to use the client built into openssl like so: 1 2 echo -n | openssl s_client -connect HOST:PORTNUMBER \\ | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /tmp/ $SERVERNAME .cert That will save the certificate to /tmp/$SERVERNAME.cert . You can use -showcerts if you want to download all the certificates in the chain. But if you just want to download the server certificate, there is no need to specify -showcerts echo -n gives a response to the server, so that the connection is released sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' removes information about the certificate chain and connection details. This is the preferred format to import the certificate into other keystores. Ref https://serverfault.com/how-to-download-the-ssl-certificate-from-a-website","title":"Certificates"},{"location":"certificate.html#how-to-download-the-ssl-certificate-from-a-website","text":"In order to download the certificate, you need to use the client built into openssl like so: 1 2 echo -n | openssl s_client -connect HOST:PORTNUMBER \\ | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > /tmp/ $SERVERNAME .cert That will save the certificate to /tmp/$SERVERNAME.cert . You can use -showcerts if you want to download all the certificates in the chain. But if you just want to download the server certificate, there is no need to specify -showcerts echo -n gives a response to the server, so that the connection is released sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' removes information about the certificate chain and connection details. This is the preferred format to import the certificate into other keystores. Ref https://serverfault.com/how-to-download-the-ssl-certificate-from-a-website","title":"how to download the ssl certificate from a website"},{"location":"mysql.html","text":"Create user for MySQL Prerequisites Install MySQL in your server. Root access to your MySQL. Create a New User in MySQL To create a new user you need to login to your MySQL shell using the following command. 1 sudo mysql -u root -p You will be prompted to enter your root password. Once you have logged in you can execute the following command yo create a new user. 1 CREATE USER 'username' @'localhost' IDENTIFIED BY 'password' ; Note password is the real password for the new user Now a new user will get created, but that user wont have any permissions to perform any operations in MySQL. Grant Permissions to User in MySQL Here are a list of some common permissions that can be provided to the users in MySQL. Types of Permissions parameter value ALL PRIVILEGES this would allow a MySQL user full access to a database or if no database is selected, global access across the system CREATE allows user to create new tables or databases DROP allows user to delete tables or databases DELETE allows user to delete rows from tables INSERT allows user to insert rows into tables SELECT allows user to use the SELECT command to read through databases UPDATE allow user to update table rows GRANT OPTION allows user to grant or remove other users\u2019 privileges You can use one of the above privileges to assign to the user. The common permission provided to a user is: 1 GRANT ALL PRIVILEGES ON database_name . * TO 'username' @'localhost' ; This command will provide all permissions for the user over the specific database. Now you need to reload the privileges for the changes to take effect. 1 FLUSH PRIVILEGES ; Grant specific permissions If you wish to provide specific permissions you can use the following syntax. Assign permissions 1 GRANT type_of_permission ON database_name . table_name TO 'username' @'localhost' ; Once you update or change permissions you need to flush privileges for the changes to take effect. Remove permissions 1 REVOKE type_of_permission ON database_name . table_name FROM 'username' @'localhost' ; This command will remove the specific permission type of user from the specific database or table. Review User Permissions You can view the permissions assigned to the user using the following command. 1 SHOW GRANTS FOR 'username' @'localhost' ;","title":"MySQL"},{"location":"mysql.html#create-user-for-mysql","text":"","title":"Create user for MySQL"},{"location":"mysql.html#prerequisites","text":"Install MySQL in your server. Root access to your MySQL.","title":"Prerequisites"},{"location":"mysql.html#create-a-new-user-in-mysql","text":"To create a new user you need to login to your MySQL shell using the following command. 1 sudo mysql -u root -p You will be prompted to enter your root password. Once you have logged in you can execute the following command yo create a new user. 1 CREATE USER 'username' @'localhost' IDENTIFIED BY 'password' ; Note password is the real password for the new user Now a new user will get created, but that user wont have any permissions to perform any operations in MySQL.","title":"Create a New User in MySQL"},{"location":"mysql.html#grant-permissions-to-user-in-mysql","text":"Here are a list of some common permissions that can be provided to the users in MySQL.","title":"Grant Permissions to User in MySQL"},{"location":"mysql.html#types-of-permissions","text":"parameter value ALL PRIVILEGES this would allow a MySQL user full access to a database or if no database is selected, global access across the system CREATE allows user to create new tables or databases DROP allows user to delete tables or databases DELETE allows user to delete rows from tables INSERT allows user to insert rows into tables SELECT allows user to use the SELECT command to read through databases UPDATE allow user to update table rows GRANT OPTION allows user to grant or remove other users\u2019 privileges You can use one of the above privileges to assign to the user. The common permission provided to a user is: 1 GRANT ALL PRIVILEGES ON database_name . * TO 'username' @'localhost' ; This command will provide all permissions for the user over the specific database. Now you need to reload the privileges for the changes to take effect. 1 FLUSH PRIVILEGES ;","title":"Types of Permissions"},{"location":"mysql.html#grant-specific-permissions","text":"If you wish to provide specific permissions you can use the following syntax.","title":"Grant specific permissions"},{"location":"mysql.html#assign-permissions","text":"1 GRANT type_of_permission ON database_name . table_name TO 'username' @'localhost' ; Once you update or change permissions you need to flush privileges for the changes to take effect.","title":"Assign permissions"},{"location":"mysql.html#remove-permissions","text":"1 REVOKE type_of_permission ON database_name . table_name FROM 'username' @'localhost' ; This command will remove the specific permission type of user from the specific database or table.","title":"Remove permissions"},{"location":"mysql.html#review-user-permissions","text":"You can view the permissions assigned to the user using the following command. 1 SHOW GRANTS FOR 'username' @'localhost' ;","title":"Review User Permissions"},{"location":"docker/alpine.html","text":"Linux Alpine 1 docker run --rm -ti -v $( pwd ) :/app -w /app alpine:latest sh How to install redis-cli and psql client on your machine with Docker Alpine Preparing docker images We will use minimalistic Linux distribution called Alpine (5MB) Dockerfile of redis-cli 1 2 3 4 FROM alpine:latest RUN apk --update add redis ENTRYPOINT [\"redis-cli\"] Creating redis-cli docker image (~7MB) 1 docker build -t redis-cli . Dockerfile of psql client 1 2 3 4 FROM alpine:latest RUN apk --update add postgresql-client ENTRYPOINT [\"psql\"] Creating psql docker image (~7MB) 1 docker build -t psql . Add aliases into our ~/.bash_profile Place these lines into your .bash_profile 1 2 alias psql = 'docker run --rm -it psql' alias redis-cli = 'docker run --rm -it redis-cli' Restart your terminal and that's it You can test it by running this: 1 2 redis-cli --help psql --help Bear in mind that dotfiles (rc files) will not work with this configuration. Install telnet into alpine image 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> docker exec - it CONTAINERID / bin / sh / app # telnet / bin / sh : telnet : not found / app # apk update fetch http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / main / x86_64 / APKINDEX . tar . gz fetch http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / community / x86_64 / APKINDEX . tar . gz v3 . 7 . 0 - 243 - gf26e75a186 [ http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / main ] v3 . 7 . 0 - 229 - g087f28e29d [ http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / community ] OK : 9051 distinct packages available / app # apk add busybox - extras ( 1 / 1 ) Installing busybox - extras ( 1 . 27 . 2 - r11 ) Executing busybox - extras - 1 . 27 . 2 - r11 . post - install Executing busybox - 1 . 27 . 2 - r7 . trigger OK : 77 MiB in 64 packages / app # busybox - extras telnet localhost 6900 Install mongo client into alpine image 1 2 3 4 5 echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/main' >> /etc/apk/repositories echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/community' >> /etc/apk/repositories apk update apk add mongodb yaml-cpp=0.6.2-r2 mongo -version Install mysql client into alpine image 1 2 3 apk update apk add mysql mysql-client mysql --version","title":"Alpine"},{"location":"docker/alpine.html#linux-alpine","text":"1 docker run --rm -ti -v $( pwd ) :/app -w /app alpine:latest sh","title":"Linux Alpine"},{"location":"docker/alpine.html#how-to-install-redis-cli-and-psql-client-on-your-machine-with-docker-alpine","text":"","title":"How to install redis-cli and psql client on your machine with Docker Alpine"},{"location":"docker/alpine.html#preparing-docker-images","text":"We will use minimalistic Linux distribution called Alpine (5MB)","title":"Preparing docker images"},{"location":"docker/alpine.html#dockerfile-of-redis-cli","text":"1 2 3 4 FROM alpine:latest RUN apk --update add redis ENTRYPOINT [\"redis-cli\"]","title":"Dockerfile of redis-cli"},{"location":"docker/alpine.html#creating-redis-cli-docker-image-7mb","text":"1 docker build -t redis-cli .","title":"Creating redis-cli docker image (~7MB)"},{"location":"docker/alpine.html#dockerfile-of-psql-client","text":"1 2 3 4 FROM alpine:latest RUN apk --update add postgresql-client ENTRYPOINT [\"psql\"]","title":"Dockerfile of psql client"},{"location":"docker/alpine.html#creating-psql-docker-image-7mb","text":"1 docker build -t psql .","title":"Creating psql docker image (~7MB)"},{"location":"docker/alpine.html#add-aliases-into-our-bash_profile","text":"Place these lines into your .bash_profile 1 2 alias psql = 'docker run --rm -it psql' alias redis-cli = 'docker run --rm -it redis-cli'","title":"Add aliases into our ~/.bash_profile"},{"location":"docker/alpine.html#restart-your-terminal-and-thats-it","text":"You can test it by running this: 1 2 redis-cli --help psql --help Bear in mind that dotfiles (rc files) will not work with this configuration.","title":"Restart your terminal and that's it"},{"location":"docker/alpine.html#install-telnet-into-alpine-image","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> docker exec - it CONTAINERID / bin / sh / app # telnet / bin / sh : telnet : not found / app # apk update fetch http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / main / x86_64 / APKINDEX . tar . gz fetch http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / community / x86_64 / APKINDEX . tar . gz v3 . 7 . 0 - 243 - gf26e75a186 [ http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / main ] v3 . 7 . 0 - 229 - g087f28e29d [ http : // dl - cdn . alpinelinux . org / alpine / v3 . 7 / community ] OK : 9051 distinct packages available / app # apk add busybox - extras ( 1 / 1 ) Installing busybox - extras ( 1 . 27 . 2 - r11 ) Executing busybox - extras - 1 . 27 . 2 - r11 . post - install Executing busybox - 1 . 27 . 2 - r7 . trigger OK : 77 MiB in 64 packages / app # busybox - extras telnet localhost 6900","title":"Install telnet into alpine image"},{"location":"docker/alpine.html#install-mongo-client-into-alpine-image","text":"1 2 3 4 5 echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/main' >> /etc/apk/repositories echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/community' >> /etc/apk/repositories apk update apk add mongodb yaml-cpp=0.6.2-r2 mongo -version","title":"Install mongo client into alpine image"},{"location":"docker/alpine.html#install-mysql-client-into-alpine-image","text":"1 2 3 apk update apk add mysql mysql-client mysql --version","title":"Install mysql client into alpine image"},{"location":"docker/install-docker.html","text":"Install Docker and docker-compose on Linux Info The easiest way is to create a file with name install_docker.sh , paste the script below and give it execute permissions. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER 1 2 chmod +x install_docker.sh sudo ./install_docker.sh","title":"Install"},{"location":"docker/install-docker.html#install-docker-and-docker-compose-on-linux","text":"Info The easiest way is to create a file with name install_docker.sh , paste the script below and give it execute permissions. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER 1 2 chmod +x install_docker.sh sudo ./install_docker.sh","title":"Install Docker and docker-compose on Linux"},{"location":"docker/run-container.html","text":"how to run container docker 1 docker run --rm -ti -v $( pwd ) :/app -w /app php:8.0.7-cli-buster bash 1 2 3 4 5 6 7 8 9 10 11 12 13 Unable to find image 'php:8.0.7-cli-buster' locally 8 .0.7-cli-buster: Pulling from library/php 69692152171a: Pull complete 2040822db325: Pull complete 9b4ca5ae9dfa: Pull complete ac1fe7c6d966: Pull complete 7994240c01ee: Pull complete 17d30fab02f4: Pull complete 0e0d506afaf7: Pull complete dd2edbf3c029: Pull complete 195ee400b641: Pull complete Digest: sha256:e1ee5a85f9c0f00258559ed806e113dc6f6721ff7d6e6ce35229ebe986aa84c6 Status: Downloaded newer image for php:8.0.7-cli-buster 1 php -v 1 2 3 PHP 8 .0.7 ( cli ) ( built: Jun 4 2021 18 :34:28 ) ( NTS ) Copyright ( c ) The PHP Group Zend Engine v4.0.7, Copyright ( c ) Zend Technologies","title":"Containers"},{"location":"docker/run-container.html#how-to-run-container-docker","text":"1 docker run --rm -ti -v $( pwd ) :/app -w /app php:8.0.7-cli-buster bash 1 2 3 4 5 6 7 8 9 10 11 12 13 Unable to find image 'php:8.0.7-cli-buster' locally 8 .0.7-cli-buster: Pulling from library/php 69692152171a: Pull complete 2040822db325: Pull complete 9b4ca5ae9dfa: Pull complete ac1fe7c6d966: Pull complete 7994240c01ee: Pull complete 17d30fab02f4: Pull complete 0e0d506afaf7: Pull complete dd2edbf3c029: Pull complete 195ee400b641: Pull complete Digest: sha256:e1ee5a85f9c0f00258559ed806e113dc6f6721ff7d6e6ce35229ebe986aa84c6 Status: Downloaded newer image for php:8.0.7-cli-buster 1 php -v 1 2 3 PHP 8 .0.7 ( cli ) ( built: Jun 4 2021 18 :34:28 ) ( NTS ) Copyright ( c ) The PHP Group Zend Engine v4.0.7, Copyright ( c ) Zend Technologies","title":"how to run container docker"},{"location":"k8s/kubernetes.html","text":"kubernetes Install kubectl 1 2 3 4 curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl chmod +x ./kubectl mkdir -p $HOME /bin && cp ./kubectl $HOME /bin/kubectl && export PATH = $PATH : $HOME /bin echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc Install kubectx https://github.com/ahmetb/kubectx 1 sudo apt install kubectx Install kubeselect https://github.com/fatliverfreddy/kubeselect 1 2 3 wget https://raw.githubusercontent.com/fatliverfreddy/kubeselect/master/kubeselect chmod +x kubeselect sudo mv kubeselect /usr/local/bin Install kubie https://github.com/sbstp/kubie 1 2 3 wget https://github.com/sbstp/kubie/releases/download/v0.13.1/kubie-linux-amd64 chmod +x kubie-linux-amd64 sudo mv kubie-linux-amd64 /usr/local/bin Install eksctl 1 2 curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_ $( uname -s ) _amd64.tar.gz\" | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin Connect to Pod for debug 1 kubectl run -i --tty --rm debug --image = alpine --restart = Never -- sh Install Helm 1 2 3 4 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh rm ./get_helm.sh kubectl Docker 1 docker run --rm -ti yosoyfunes/cbff-local multitool https://github.com/Praqma/Network-MultiTool 1 kubectl run multitool --image = praqma/network-multitool","title":"Kubernetes"},{"location":"k8s/kubernetes.html#kubernetes","text":"","title":"kubernetes"},{"location":"k8s/kubernetes.html#install-kubectl","text":"1 2 3 4 curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl chmod +x ./kubectl mkdir -p $HOME /bin && cp ./kubectl $HOME /bin/kubectl && export PATH = $PATH : $HOME /bin echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc","title":"Install kubectl"},{"location":"k8s/kubernetes.html#install-kubectx","text":"https://github.com/ahmetb/kubectx 1 sudo apt install kubectx","title":"Install kubectx"},{"location":"k8s/kubernetes.html#install-kubeselect","text":"https://github.com/fatliverfreddy/kubeselect 1 2 3 wget https://raw.githubusercontent.com/fatliverfreddy/kubeselect/master/kubeselect chmod +x kubeselect sudo mv kubeselect /usr/local/bin","title":"Install kubeselect"},{"location":"k8s/kubernetes.html#install-kubie","text":"https://github.com/sbstp/kubie 1 2 3 wget https://github.com/sbstp/kubie/releases/download/v0.13.1/kubie-linux-amd64 chmod +x kubie-linux-amd64 sudo mv kubie-linux-amd64 /usr/local/bin","title":"Install kubie"},{"location":"k8s/kubernetes.html#install-eksctl","text":"1 2 curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_ $( uname -s ) _amd64.tar.gz\" | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin","title":"Install eksctl"},{"location":"k8s/kubernetes.html#connect-to-pod-for-debug","text":"1 kubectl run -i --tty --rm debug --image = alpine --restart = Never -- sh","title":"Connect to Pod for debug"},{"location":"k8s/kubernetes.html#install-helm","text":"1 2 3 4 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh rm ./get_helm.sh","title":"Install Helm"},{"location":"k8s/kubernetes.html#kubectl-docker","text":"1 docker run --rm -ti yosoyfunes/cbff-local","title":"kubectl Docker"},{"location":"k8s/kubernetes.html#multitool","text":"https://github.com/Praqma/Network-MultiTool 1 kubectl run multitool --image = praqma/network-multitool","title":"multitool"}]}